2015-12-15  Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>

	Backport from mainline.
	2015-12-15
	Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>

	* resolve.c (resolve_critical): Committing symbols of
	lock variables.

2015-12-14  Tobias Burnus  <burnus@net-b.de>
	    Alessandro Fanfarillo <fanfarillo.gcc@gmail.com>

	Backport from mainline.
	2015-12-09  Tobias Burnus  <burnus@net-b.de>
	    Alessandro Fanfarillo <fanfarillo.gcc@gmail.com>

	* trans.c (gfc_allocate_using_lib,gfc_deallocate_with_status):
	Introducing __asm__ __volatile__ ("":::"memory")
	after image control statements.
	* trans-stmt.c 	(gfc_trans_sync, gfc_trans_event_post_wait,
	gfc_trans_lock_unlock, gfc_trans_critical): Ditto.
	* trans-intrinsic.c (gfc_conv_intrinsic_caf_get,
	conv_caf_send): Introducing __asm__ __volatile__ ("":::"memory")
	after send, before get and around sendget.

2015-12-04  Release Manager

	* GCC 5.3.0 released.

2015-11-27  Andre Vehreschild  <vehre@gcc.gnu.org>

	PR fortran/68218
	* trans-array.c (gfc_array_init_size): Add gfc_evaluate_now() when
	array spec in allocate is a function call.

2015-11-24  Paul Thomas  <pault@gcc.gnu.org>

	Backport from trunk.
	PR fortran/68196
	* class.c (has_finalizer_component): Prevent infinite recursion
	through this function if the derived type and that of its
	component are the same.
	* trans-types.c (gfc_get_derived_type): Do the same for proc
	pointers by ignoring the explicit interface for the component.

	PR fortran/66465
	* check.c (same_type_check): If either of the expressions is
	BT_PROCEDURE, use the typespec from the symbol, rather than the
	expression.

2015-11-18  Dominique d'Humieres <dominiq@lps.ens.fr>

	PR fortran/65751
	* expr.c (gfc_check_pointer_assign): Fix error message.

2015-11-16  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/58027
	PR fortran/60993
	* expr.c (gfc_check_init_expr): Prevent a redundant check when a
	__convert_* function was inserted into an array constructor.
	(gfc_check_assign_symbol): Check for an initialization expression
	when a __convert_* was inserted.

2015-11-14  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/67803
	* array.c (gfc_match_array_constructor): If array constructor included
	a CHARACTER typespec, check array elements for compatible type.

2015-11-13  Steven G. Kargl  <kargl@gccc.gnu.org>

	PR fortran/68319
	* decl.c (gfc_match_data, gfc_match_entry): Enforce F2008:C1206.
	* io.c (gfc_match_format): Ditto.
	* match.c (gfc_match_st_function): Ditto.

2015-11-12  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/68318
	* decl.c (get_proc_name): Increment reference count for ENTRY.
	While here, fix comment and use postfix ++ for consistency.

2015-11-08  Steven g. Kargl  <kargl@gcc.gnu.org>

	PR fortran/68053
	* decl.c (add_init_expr_to_sym):  Try to reduce initialization expression
	before testing for a constant value.

2015-11-08  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/68224
	* array.c (match_array_element_spec): Check of invalid NULL().
	While here, fix nearby comments.

2015-11-08  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/68153
	* check.c (gfc_check_reshape): Improve check for valid SHAPE argument.

2015-11-08  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/68151
	* match.c (match_case_selector):  Check for invalid type.

2015-01-25  Paul Thomas  <pault@gcc.gnu.org>

	Backported from trunk.
	PR fortran/67171
	* trans-array.c (structure_alloc_comps): On deallocation of
	class components, reset the vptr to the declared type vtable
	and reset the _len field of unlimited polymorphic components.
	*trans-expr.c (gfc_find_and_cut_at_last_class_ref): Bail out on
	allocatable component references to the right of part reference
	with non-zero rank and return NULL.
	(gfc_reset_vptr): Simplify this function by using the function
	gfc_get_vptr_from_expr. Return if the vptr is NULL_TREE.
	(gfc_reset_len): If gfc_find_and_cut_at_last_class_ref returns
	NULL return.

2015-10-30  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/51993
	* decl.c (gfc_set_constant_character_len): Convert gcc_assert into an
	if-statement causing an early return leads to valid error message.

2015-10-30  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/68154
	* decl.c (add_init_expr_to_sym): if the char length in the typespec
	is NULL, check for and use a constructor.

2015-10-30  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/36192
	* interface.c (get_expr_storage_size):  Check for INTEGER type before
	calling gmp routines.

2015-10-29  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/68055
	* decl.c (gfc_match_decl_type_spec): Check for valid kind in old-style
	declarations.

2015-10-29  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/68054
	* decl.c (match_attr_spec): PROTECTED can only be a module.

2015-10-29  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/67939
	* data.c (create_character_initializer): Deal with zero length string.

2015-10-29  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/67885
	* trans-decl.c (generate_local_decl): Mark PARAMETER entities in
	BLOCK construct.

2015-10-29  Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/67805
	PR fortran/68108
	* array.c (gfc_match_array_constructor): Check for error from type
	spec matching.
	* decl.c (char_len_param_value): Check for valid of charlen parameter.
	Check for REF_ARRAY.  Reap dead code dating to 2008.
	match.c (gfc_match_type_spec): Special case the keyword use in REAL.

2015-10-26  Paul Thomas  <pault@gcc.gnu.org>

	PR fortran/67177
	PR fortran/67977
	Backport from mainline r228940:
	* primary.c (match_substring): Add an argument 'deferred' to
	flag 